version: '3'
volumes:
  prometheus_data: {}
  grafana_data: {}
services:

  dbpostgres:
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: mlflow_db
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: example
  minio:
    image: 'bitnami/minio:latest'
    ports:
      - '9983:9000'
    environment:
      - MINIO_ACCESS_KEY=minio-access-key
      - MINIO_SECRET_KEY=minio-secret-key
  mymlflow:
    build: ./mlflow-docker
    image: 'vsemashkin/mymlflow:latest'
    ports:
      - '5544:5000'
    depends_on:
      - dbpostgres
    links:
      - minio
      - dbpostgres
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minio-access-key
      - AWS_SECRET_ACCESS_KEY=minio-secret-key
  mycondaenv:
    build: ./conda3-docker
    image: 'vsemashkin/conda3'
    environment:
      - GRANT_SUDO="yes"
      - MLFLOW_TRACKING_URI=http://mymlflow:5000
      - MLFLOW_ARTIFACT_URI=http://mymlflow:5000
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minio-access-key
      - AWS_SECRET_ACCESS_KEY=minio-secret-key
    ports:
      - '8888:8888'
    volumes:
      - .:/opt/notebooks 
    depends_on:
      - mymlflow
      - minio
    links:
      - mymlflow
      - minio
    entrypoint: sh -c 'jupyter lab --allow-root --ip=* --port=8888 --no-browser --notebook-dir=/opt/notebooks'
  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.prod.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - mymlflow
    links:
      - mymlflow
    restart: always
  grafana:
    image: grafana/grafana
    user: "104"
    depends_on:
      - prometheus
    links:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always
  
